package Utilitats

import javax.swing.*
import java.awt.*
import java.io.File
import java.sql.DriverManager


class Finestra : JFrame() {
	val fCh = JFileChooser(".")
	val taula = JTable(1, 6)
	val area = JTextArea(10, 100)


	init {

		defaultCloseOperation = JFrame.EXIT_ON_CLOSE
		setTitle("Crear apunts Quotes")
		//setSize(400, 300)
		setLayout(GridLayout(2, 1))

		val panell1 = JPanel(BorderLayout())
		val panell11 = JPanel(FlowLayout())
		val panell12 = JPanel(BorderLayout())
		add(panell1)
		panell1.add(panell11, BorderLayout.NORTH)
		panell1.add(panell12, BorderLayout.CENTER)


		val fitxer = JTextField(25)
		panell11.add(fitxer)
		val botoTriarFitxer = JButton("Triar fitxer")
		panell11.add(botoTriarFitxer)


		panell12.add(JLabel("Llista de músics i quotes:"), BorderLayout.NORTH)
		taula.setEnabled(false)
		val scroll = JScrollPane(taula)
		panell12.add(scroll, null)

		botoTriarFitxer.addActionListener {
			val r = fCh.showOpenDialog(this)
			if (r == JFileChooser.APPROVE_OPTION) {
				fitxer.setText(fCh.getSelectedFile().getName())
				val f = fCh.getSelectedFile()
				val linies = f.readLines()

				plenarTaula(linies)
			}
		}
		val botoPassarSQL = JButton("Convertir SQL")
		panell1.add(botoPassarSQL, BorderLayout.SOUTH)
		botoPassarSQL.addActionListener {
			val dadesConnexio = "jdbc:sqlite:/home/alvar/Dropbox/Privat/AMCastàlia/Comptabilitat/keme/amcastalia.sqlite"
			val con = DriverManager.getConnection(dadesConnexio)
			val st1 = con.createStatement()
			val rs1 =
				st1.executeQuery("SELECT prox_asiento FROM EJERCICIOS WHERE codigo = (SELECT MAX (codigo) FROM EJERCICIOS)")
			var segAssent = 0
			if (rs1.next())
				segAssent = rs1.getInt(1)

			val st2 = con.createStatement()
			val rs2 = st2.executeQuery("SELECT MAX (pase) FROM DIARIO")
			var segPasse = rs2.getInt(1) + 1

			area.setText("")
			for (l in 0 until taula.getRowCount()) {
				/*	var cadena = "INSERT INTO DIARIO(asiento, pase, fecha, cuenta, debe, haber, concepto, usuario, ejercicio, fecha_factura) " +
                                                 "VALUES (?,?,?,?,?,?,?,?,?,?)"
                    val st2 = con.prepareStatement(cadena)
                    st2.setInt(1,segAssent)
                    st2.setInt(2,segAssent)
                    st2.setString(3,"2-12-2020")
                    st2.setString(4,"44820"+taula.getModel().getValueAt(l, 0).toString().padStart(4, '0'))
                    st2.setFloat(5,taula.getModel().getValueAt(l, 5).toString().replace(",",".").toFloat())
                    st2.setFloat(6,"0.0")
                    st2.setString(7,"QUOTA 2021-1T " + taula.getModel().getValueAt(l, 1) +", " + taula.getModel().getValueAt(l, 2))
                    st2.setString(8,"Alvar")
                    st2.setString(9,"2020")
                    st2.setString(10,"2-12-2020")*/
				var cadena =
					"INSERT INTO DIARIO(asiento, pase, fecha, cuenta, debe, haber, concepto, usuario, ejercicio, fecha_factura) " +
							"VALUES ("
				cadena = cadena + segAssent + ","
				cadena = cadena + segPasse + ","
				cadena = cadena + "'2020-12-2'" + ","
				cadena = cadena + "'44820" + (taula.getModel().getValueAt(l, 0)).toString().padStart(4, '0') + "',"
				cadena = cadena + taula.getModel().getValueAt(l, 5).toString().replace(",", ".").toFloat() + ","
				cadena = cadena + "0" + ","
				cadena = cadena + "'QUOTA 2021-1T " + taula.getModel().getValueAt(l, 1) + ", " + taula.getModel()
					.getValueAt(l, 2) + "',"
				cadena = cadena + "'Alvar'" + ","
				cadena = cadena + "'2020'" + ","
				cadena = cadena + "'2020-12-2'" + ")"
				area.append(cadena + "\n")

				segPasse++
				cadena =
					"INSERT INTO DIARIO(asiento, pase, fecha, cuenta, debe, haber, concepto, usuario, ejercicio, fecha_factura) " +
							"VALUES ("
				cadena = cadena + segAssent + ","
				cadena = cadena + segPasse + ","
				cadena = cadena + "'2020-12-2'" + ","
				cadena = cadena + "'720000001'" + ","
				cadena = cadena + "0" + ","
				cadena = cadena + taula.getModel().getValueAt(l, 5).toString().replace(",", ".").toFloat() + ","
				cadena = cadena + "'QUOTA 2021-1T " + taula.getModel().getValueAt(l, 1) + ", " + taula.getModel()
					.getValueAt(l, 2) + "',"
				cadena = cadena + "'Alvar'" + ","
				cadena = cadena + "'2020'" + ","
				cadena = cadena + "'2020-12-2'" + ")"
				area.append(cadena + ")\n")
				segPasse++
				segAssent++
			}
		}
		val panell2 = JPanel(BorderLayout())
		add(panell2)
		panell2.add(area)
		pack()

	}

	fun plenarTaula(linies: List<String>) {
		var ll = Array(linies.size) { arrayOfNulls<String>(6) }
		var compt = 0
		for (i in 0 until linies.size) {
			val camps = linies.get(i).split(";")
			if (camps.get(5) != "0") {
				for (j in 0 until camps.size) {
					ll[compt][j] = camps.get(j)

				}
				compt++
			}
		}
		val ll2 = Array(compt) { arrayOfNulls<String>(6) }
		ll.copyInto(ll2, 0, 0, compt)
		val caps = arrayOf("Num", "Cognoms", "Nom", "Data", "Estudis", "Quota")
		taula.setModel(javax.swing.table.DefaultTableModel(ll2, caps))
	}
}


fun main(args: Array<String>) {
	EventQueue.invokeLater {
		Finestra().isVisible = true
	}
}

